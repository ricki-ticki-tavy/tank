#define ADC1115_ADDRESS 0x48
#define ADC1115_TIMEOUT_MS 100
#define ADC1115_START_CONVERSION 0x8000
#define ADC1115_FULL_RANGE 0x4000
#define ADC1115_CHANNEL0 0x0000
#define ADC1115_CHANNEL1 0x1000
#define ADC1115_CHANNEL2 0x2000
#define ADC1115_CHANNEL3 0x3000

#define ADC1115_GAIN_RANGE_6144_MV 0x0000
#define ADC1115_GAIN_RANGE_4096_MV 0x0200
#define ADC1115_GAIN_RANGE_2048_MV 0x0400
#define ADC1115_GAIN_RANGE_1024_MV 0x0600
#define ADC1115_GAIN_RANGE_0512_MV 0x0800
#define ADC1115_GAIN_RANGE_0256_MV 0x0E00

#define ADC1115_POWER_DOWN_MODE 0x0100

#define ADC1115_SPS_8 0x0000
#define ADC1115_SPS_16 0x0020
#define ADC1115_SPS_32 0x0040
#define ADC1115_SPS_64 0x0060
#define ADC1115_SPS_128 0x0080
#define ADC1115_SPS_250 0x00A0
#define ADC1115_SPS_475 0x00C0
#define ADC1115_SPS_860 0x00E0

#define ADC1115_DISABLE_COMPARATORS 0x0003

#define ADC1115_CONVERSION_REGISTER 0x00
#define ADC1115_CONFIG_REGISTER 0x01

class ADC1115 {
  private:
    int readTwoBytes(void);
    void writeTwoBytes(int data);
  public:
    ADC1115(void);
    
    int init(void);
    int analogRead(unsigned char channel);
  
};